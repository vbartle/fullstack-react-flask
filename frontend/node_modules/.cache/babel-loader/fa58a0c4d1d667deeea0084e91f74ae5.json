{"ast":null,"code":"var _jsxFileName = \"/Users/bartle/Code/fullstack-testing/newDB_1/frontend/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Input, Button } from \"reactstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ID: \"\",\n      key: \"\",\n      value: \"\",\n      entries: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    const serverUrl = \"http://localhost:5000\";\n\n    if (event.target.id === \"read\") {\n      // console.log(this.state.ID);\n      fetch(serverUrl + \"/read/\" + this.state.ID, {\n        method: \"GET\"\n      }).then(response => {\n        return response.json().then(object => {\n          this.setState({\n            entries: Object.entries(object)\n          });\n        });\n      });\n    }\n\n    if (event.target.id === \"create\") {\n      console.log(\"test\");\n    }\n  }\n\n  handleKeys(event) {\n    this.setState({\n      ID: event\n    });\n    console.log(event.target.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, Object.entries(this.state.entries).map(([key, value]) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, Object.values(this.state.entries[key][0]), \":\", Object.keys(this.state.entries[key][1])[0], \",\", Object.values(this.state.entries[key][1]))))), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"ID\",\n      onChange: event => this.handleKeys(event.target.value),\n      style: {\n        width: \"50px\"\n      },\n      id: \"ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"key\",\n      onChange: event => this.handleKeys(event.target.value),\n      style: {\n        width: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"value\",\n      onChange: event => this.handleKeys(event.target.value),\n      style: {\n        width: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, this.state.ID), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"secondary\",\n      size: \"lg\",\n      onClick: this.handleClick,\n      id: \"create\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"create\"), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      size: \"lg\",\n      onClick: this.handleClick,\n      id: \"read\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"read\"), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"warning\",\n      size: \"lg\",\n      onClick: this.handleClick,\n      id: \"update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"update\"), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"danger\",\n      size: \"lg\",\n      onClick: this.handleClick,\n      id: \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"delete\"), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"info\",\n      size: \"lg\",\n      onClick: this.handleClick,\n      id: \"write\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"write\"), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"info\",\n      size: \"lg\",\n      onClick: this.handleClick,\n      id: \"load\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"load\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bartle/Code/fullstack-testing/newDB_1/frontend/src/App.js"],"names":["React","Input","Button","App","Component","constructor","props","state","ID","key","value","entries","handleClick","bind","event","serverUrl","target","id","fetch","method","then","response","json","object","setState","Object","console","log","handleKeys","render","map","values","keys","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Input, Button } from \"reactstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ID: \"\", key: \"\", value: \"\", entries: \"\" };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    const serverUrl = \"http://localhost:5000\";\n    if (event.target.id === \"read\") {\n      // console.log(this.state.ID);\n      fetch(serverUrl + \"/read/\" + this.state.ID, { method: \"GET\" }).then(\n        (response) => {\n          return response.json().then((object) => {\n            this.setState({\n              entries: Object.entries(object),\n            });\n          });\n        }\n      );\n    }\n\n    if (event.target.id === \"create\") {\n      console.log(\"test\");\n    }\n  }\n\n  handleKeys(event) {\n    this.setState({ ID: event });\n    console.log(event.target.id);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ul>\n            {Object.entries(this.state.entries).map(([key, value]) => (\n              <li>\n                <span>\n                  {Object.values(this.state.entries[key][0])}:\n                  {Object.keys(this.state.entries[key][1])[0]},\n                  {Object.values(this.state.entries[key][1])}\n                </span>\n              </li>\n            ))}\n          </ul>\n          <Input\n            placeholder=\"ID\"\n            onChange={(event) => this.handleKeys(event.target.value)}\n            style={{ width: \"50px\" }}\n            id=\"ID\"\n          />\n          <Input\n            placeholder=\"key\"\n            onChange={(event) => this.handleKeys(event.target.value)}\n            style={{ width: \"100px\" }}\n          />\n          <Input\n            placeholder=\"value\"\n            onChange={(event) => this.handleKeys(event.target.value)}\n            style={{ width: \"100px\" }}\n          />\n          <p>{this.state.ID}</p>\n          <Button\n            outline\n            color=\"secondary\"\n            size=\"lg\"\n            onClick={this.handleClick}\n            id=\"create\"\n          >\n            create\n          </Button>\n          <Button\n            outline\n            color=\"primary\"\n            size=\"lg\"\n            onClick={this.handleClick}\n            id=\"read\"\n          >\n            read\n          </Button>\n          <Button\n            outline\n            color=\"warning\"\n            size=\"lg\"\n            onClick={this.handleClick}\n            id=\"update\"\n          >\n            update\n          </Button>\n          <Button\n            outline\n            color=\"danger\"\n            size=\"lg\"\n            onClick={this.handleClick}\n            id=\"delete\"\n          >\n            delete\n          </Button>\n          <Button\n            outline\n            color=\"info\"\n            size=\"lg\"\n            onClick={this.handleClick}\n            id=\"write\"\n          >\n            write\n          </Button>\n          <Button\n            outline\n            color=\"info\"\n            size=\"lg\"\n            onClick={this.handleClick}\n            id=\"load\"\n          >\n            load\n          </Button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}