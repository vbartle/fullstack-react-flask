{"ast":null,"code":"var _jsxFileName = \"/Users/bartle/Code/fullstack-testing/newDB_1/frontend/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { InputGroup, Input, Button } from \"reactstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entries: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    const serverUrl = \"http://localhost:5000\";\n\n    if (event.target.id == \"readAll\") {\n      fetch(serverUrl + \"/read/all\", {\n        method: \"GET\"\n      }).then(response => {\n        return response.json().then(object => {\n          this.setState({\n            entries: Object.entries(object)\n          });\n        });\n      });\n    } else if (event.target.id == \"readAll\") {\n      console.log(\"test\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, Object.entries(this.state.entries).map(([key, value]) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, Object.values(this.state.entries[key][0]), \":\", Object.keys(this.state.entries[key][1])[0], \",\", Object.values(this.state.entries[key][1]))))), /*#__PURE__*/React.createElement(InputGroup, {\n      style: {\n        width: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"#\",\n      ref: el => this.nameValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: this.handleClick,\n      id: \"readAll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"read\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bartle/Code/fullstack-testing/newDB_1/frontend/src/App.js"],"names":["React","useState","InputGroup","Input","Button","App","Component","constructor","props","state","entries","handleClick","bind","event","serverUrl","target","id","fetch","method","then","response","json","object","setState","Object","console","log","render","map","key","value","values","keys","width","el","nameValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,YAA1C;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,KAAD,EAAQ;AACjB,UAAMC,SAAS,GAAG,uBAAlB;;AACA,QAAID,KAAK,CAACE,MAAN,CAAaC,EAAb,IAAmB,SAAvB,EAAkC;AAChCC,MAAAA,KAAK,CAACH,SAAS,GAAG,WAAb,EAA0B;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAA1B,CAAL,CAAkDC,IAAlD,CAAwDC,QAAD,IAAc;AACnE,eAAOA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,MAAD,IAAY;AACtC,eAAKC,QAAL,CAAc;AACZb,YAAAA,OAAO,EAAEc,MAAM,CAACd,OAAP,CAAeY,MAAf;AADG,WAAd;AAGD,SAJM,CAAP;AAKD,OAND;AAOD,KARD,MASK,IAAIT,KAAK,CAACE,MAAN,CAAaC,EAAb,IAAmB,SAAvB,EAAkC;AACrCS,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,MAAM,CAACd,OAAP,CAAe,KAAKD,KAAL,CAAWC,OAA1B,EAAmCkB,GAAnC,CAAuC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,kBACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,MAAM,CAACO,MAAP,CAAc,KAAKtB,KAAL,CAAWC,OAAX,CAAmBmB,GAAnB,EAAwB,CAAxB,CAAd,CADH,OAEGL,MAAM,CAACQ,IAAP,CAAY,KAAKvB,KAAL,CAAWC,OAAX,CAAmBmB,GAAnB,EAAwB,CAAxB,CAAZ,EAAwC,CAAxC,CAFH,OAGGL,MAAM,CAACO,MAAP,CAAc,KAAKtB,KAAL,CAAWC,OAAX,CAAmBmB,GAAnB,EAAwB,CAAxB,CAAd,CAHH,CADF,CADD,CADH,CADF,eAYE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,GAAnB;AAAuB,MAAA,GAAG,EAAEC,EAAE,IAAI,KAAKC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZF,eAeE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKxB,WAAtC;AAAmD,MAAA,EAAE,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CADF,CADF;AAuBD;;AA/C+B;;AAkDlC,eAAeN,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { InputGroup, Input, Button } from \"reactstrap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { entries: \"\" };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    const serverUrl = \"http://localhost:5000\";\n    if (event.target.id == \"readAll\") {\n      fetch(serverUrl + \"/read/all\", { method: \"GET\" }).then((response) => {\n        return response.json().then((object) => {\n          this.setState({\n            entries: Object.entries(object),\n          });\n        });\n      });\n    }\n    else if (event.target.id == \"readAll\") {\n      console.log(\"test\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ul>\n            {Object.entries(this.state.entries).map(([key, value]) => (\n              <li>\n                <span>\n                  {Object.values(this.state.entries[key][0])}:\n                  {Object.keys(this.state.entries[key][1])[0]},\n                  {Object.values(this.state.entries[key][1])}\n                </span>\n              </li>\n            ))}\n          </ul>\n          <InputGroup style={{ width: \"50px\" }}>\n            <Input placeholder=\"#\" ref={el => this.nameValue}/>\n          </InputGroup>\n          <Button color=\"success\" onClick={this.handleClick} id=\"readAll\">\n            read\n          </Button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}